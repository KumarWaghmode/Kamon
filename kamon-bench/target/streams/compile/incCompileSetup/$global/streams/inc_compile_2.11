format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /home/diego/gitHub/Kamon/kamon-bench/target/scala-2.11/classes
compile options:
9 items
0 -> -encoding
1 -> utf8
2 -> -g:vars
3 -> -feature
4 -> -unchecked
5 -> -deprecation
6 -> -language:postfixOps
7 -> -language:implicitConversions
8 -> -Xlog-reflective-calls
javac options:
5 items
0 -> -Xlint:-options
1 -> -source
2 -> 1.8
3 -> -target
4 -> 1.8
compiler version:
1 items
0 -> 2.11.8
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
4 items
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> /home/diego/gitHub/Kamon/kamon-bench/target/scala-2.11/classes/kamon/bench/instruments/KamonCounterBench$$anon$1.class
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> /home/diego/gitHub/Kamon/kamon-bench/target/scala-2.11/classes/kamon/bench/instruments/KamonCounterBench.class
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> /home/diego/gitHub/Kamon/kamon-bench/target/scala-2.11/classes/kamon/bench/instruments/KamonMinMaxCounterBench$$anon$1.class
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> /home/diego/gitHub/Kamon/kamon-bench/target/scala-2.11/classes/kamon/bench/instruments/KamonMinMaxCounterBench.class
binary dependencies:
4 items
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> /home/diego/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.8.jar
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> /home/diego/Programs/zulu8.13.0.5-jdk8.0.72/jre/lib/rt.jar
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> /home/diego/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.8.jar
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> /home/diego/Programs/zulu8.13.0.5-jdk8.0.72/jre/lib/rt.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
9 items
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> kamon.metric.instrument.CollectionContext
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> kamon.metric.instrument.CollectionContext$
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> kamon.metric.instrument.Counter$
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> kamon.metric.instrument.LongAdderCounter
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> kamon.metric.instrument.CollectionContext
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> kamon.metric.instrument.CollectionContext$
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> kamon.metric.instrument.Histogram
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> kamon.metric.instrument.Histogram$
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> kamon.metric.instrument.PaddedMinMaxCounter
inheritance internal dependencies:
0 items
inheritance external dependencies:
2 items
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> kamon.metric.instrument.CollectionContext
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> kamon.metric.instrument.CollectionContext
class names:
4 items
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> kamon.bench.instruments.KamonCounterBench
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> kamon.bench.instruments.KamonCounterBench$$anon$1
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> kamon.bench.instruments.KamonMinMaxCounterBench
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> kamon.bench.instruments.KamonMinMaxCounterBench$$anon$1
used names:
74 items
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> $anon
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> <init>
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> <refinement>
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> AnyRef
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> CollectionContext
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> Counter
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> Int
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> KamonCounterBench
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> Long
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> LongAdderCounter
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> LongBuffer
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> Object
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> Snapshot
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> TimeUnit
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> Unit
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> allocate
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> annotations
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> bench
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> buffer
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> collect
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> collectionContext
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> concurrent
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> count
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> counter
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> increment
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> instrument
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> instruments
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> java
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> jmh
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> kamon
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> metric
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> nio
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> openjdk
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> org
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> scala
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> util
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> $anon
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> <init>
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> <refinement>
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> AnyRef
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> CollectionContext
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> DynamicRange
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> Histogram
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> Int
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> KamonMinMaxCounterBench
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> Long
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> LongBuffer
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> Object
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> PaddedMinMaxCounter
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> Snapshot
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> TimeUnit
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> Unit
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> allocate
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> annotations
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> apply
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> bench
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> buffer
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> collect
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> collectionContext
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> concurrent
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> counter
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> increment
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> instrument
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> instruments
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> java
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> jmh
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> kamon
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> metric
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> min
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> nio
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> openjdk
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> org
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> scala
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> util
product stamps:
4 items
/home/diego/gitHub/Kamon/kamon-bench/target/scala-2.11/classes/kamon/bench/instruments/KamonCounterBench$$anon$1.class -> lastModified(1481232740000)
/home/diego/gitHub/Kamon/kamon-bench/target/scala-2.11/classes/kamon/bench/instruments/KamonCounterBench.class -> lastModified(1481232740000)
/home/diego/gitHub/Kamon/kamon-bench/target/scala-2.11/classes/kamon/bench/instruments/KamonMinMaxCounterBench$$anon$1.class -> lastModified(1481232740000)
/home/diego/gitHub/Kamon/kamon-bench/target/scala-2.11/classes/kamon/bench/instruments/KamonMinMaxCounterBench.class -> lastModified(1481232740000)
source stamps:
2 items
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> hash(2f74a7571867dcdd78aae54e254b13bf01b96eaf)
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> hash(d6b3bc3df422339329db21ddc37a5557c7ec5ecf)
binary stamps:
2 items
/home/diego/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.8.jar -> lastModified(1457105192000)
/home/diego/Programs/zulu8.13.0.5-jdk8.0.72/jre/lib/rt.jar -> lastModified(1454008812000)
class names:
2 items
/home/diego/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.8.jar -> scala.Unit
/home/diego/Programs/zulu8.13.0.5-jdk8.0.72/jre/lib/rt.jar -> java.lang.Object
internal apis:
2 items
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwfmjI5AAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAac3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwvP5HO3QABm5vdGlmeXNxAH4ADIu4w5V0AAR3YWl0c3EAfgAMozANVXQADSRhc0luc3RhbmNlT2ZzcQB+AAxmt04odAARY29sbGVjdGlvbkNvbnRleHRzcQB+AAyzzLE5dAAGZXF1YWxzc3EAfgAMAixq5HQADGFzSW5zdGFuY2VPZnNxAH4ADIg9zw10AAxzeW5jaHJvbml6ZWRzcQB+AAySCtz8dAANJGlzSW5zdGFuY2VPZnNxAH4ADI0KG550AAZidWZmZXJzcQB+AAwu7R9UdAAJbm90aWZ5QWxsc3EAfgAMG/PLWXQADGlzSW5zdGFuY2VPZnNxAH4ADP6Eht10AAY8aW5pdD5zcQB+AAz1LIoZdAACPT1zcQB+AAyytzKkdAAFY2xvbmVzcQB+AAwEGoKhdAAHY291bnRlcnNxAH4ADJjB8v10AAh0b1N0cmluZ3NxAH4ADHFA+6R0ABFLYW1vbkNvdW50ZXJCZW5jaHNxAH4ADJs3k8x0AAIhPXNxAH4ADNr0EWJ0AANnZXRzcQB+AAwdbzatdAAIZ2V0Q2xhc3NzcQB+AAzTQ2LHdAACbmVzcQB+AAyhvot7dAAJaW5jcmVtZW50c3EAfgAMwn9NaXQAAmVxc3EAfgAM9GqXl3QAAiMjc3EAfgAMbq60jXQACGZpbmFsaXplc3EAfgAMsxp9iXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AS3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAABnNyABR4c2J0aS5hcGkuQW5ub3RhdGlvbt4OgaL2XAqyAgACWwAJYXJndW1lbnRzdAAfW0x4c2J0aS9hcGkvQW5ub3RhdGlvbkFyZ3VtZW50O0wABGJhc2V0ABBMeHNidGkvYXBpL1R5cGU7eHB1cgAfW0x4c2J0aS5hcGkuQW5ub3RhdGlvbkFyZ3VtZW50O1Gdpo84JQ94AgAAeHAAAAABc3IAHHhzYnRpLmFwaS5Bbm5vdGF0aW9uQXJndW1lbnTWRbHYAxsXfAIAAkwABG5hbWVxAH4ADUwABXZhbHVlcQB+AA14cHQABXZhbHVldAAFR3JvdXBzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwdAAFU3RhdGVzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGRzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAVzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAA29yZ3NxAH4AcHQAB29wZW5qZGtzcQB+AHB0AANqbWhzcQB+AHB0AAthbm5vdGF0aW9uc3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgBxc3EAfgBYdXEAfgBcAAAAAXNxAH4AXnEAfgBgdAANW0F2ZXJhZ2VUaW1lXXNxAH4AYnQADUJlbmNobWFya01vZGVxAH4AanNxAH4AWHVxAH4AXAAAAAFzcQB+AF5xAH4AYHQAC05BTk9TRUNPTkRTc3EAfgBidAAOT3V0cHV0VGltZVVuaXRxAH4AanNxAH4AWHVxAH4AXAAAAAFzcQB+AF5xAH4AYHQAATJzcQB+AGJ0AARGb3JrcQB+AGpzcQB+AFh1cQB+AFwAAAABc3EAfgBedAAKaXRlcmF0aW9uc3QAAjEwc3EAfgBidAAGV2FybXVwcQB+AGpzcQB+AFh1cQB+AFwAAAABc3EAfgBedAAKaXRlcmF0aW9uc3QAAjEwc3EAfgBidAALTWVhc3VyZW1lbnRxAH4AanNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAKWthbW9uLmJlbmNoLmluc3RydW1lbnRzLkthbW9uQ291bnRlckJlbmNodXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAACdAAlb3JnLm9wZW5qZGsuam1oLmFubm90YXRpb25zLkJlbmNobWFya3QAIW9yZy5vcGVuamRrLmptaC5hbm5vdGF0aW9ucy5Hcm91cHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHEAfgBkc3EAfgCpc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEtMAAlpbmhlcml0ZWRxAH4AS0wAB3BhcmVudHNxAH4AS3hxAH4AZXNxAH4AqXVxAH4ARgAAAABzcQB+AKl1cQB+AEYAAAAAc3EAfgCpdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcQB+AGJ0AAZPYmplY3RzcQB+AGhzcQB+AGt1cQB+AG4AAAADc3EAfgBwdAAEamF2YXNxAH4AcHQABGxhbmdxAH4Ae3NxAH4AYnQAA0FueXNxAH4AaHNxAH4Aa3VxAH4AbgAAAAJzcQB+AHB0AAVzY2FsYXEAfgB7dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAXa2Ftb24uYmVuY2guaW5zdHJ1bWVudHNzcQB+AMp0AAtrYW1vbi5iZW5jaHNxAH4AynQABWthbW9uc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFY4FnqsnVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AD4vaG9tZS9kaWVnby9naXRIdWIvS2Ftb24va2Ftb24tYmVuY2gvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFC90p1cYZ9zdeKrlTiVLE78BuW6v
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwy1eWNwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAac3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwin8bZnQABm5vdGlmeXNxAH4ADIMo7iB0AAR3YWl0c3EAfgAMNc4KqXQADSRhc0luc3RhbmNlT2ZzcQB+AAxPlPMpdAARY29sbGVjdGlvbkNvbnRleHRzcQB+AAxP4X11dAAGZXF1YWxzc3EAfgAMsnqNG3QADGFzSW5zdGFuY2VPZnNxAH4ADHAzByR0AAxzeW5jaHJvbml6ZWRzcQB+AAwY+OwGdAANJGlzSW5zdGFuY2VPZnNxAH4ADJbpRG90AAZidWZmZXJzcQB+AAxUJMKNdAAJbm90aWZ5QWxsc3EAfgAMsCD3KnQADGlzSW5zdGFuY2VPZnNxAH4ADHlrMTx0AAY8aW5pdD5zcQB+AAzK9rWvdAACPT1zcQB+AAx63+28dAAFY2xvbmVzcQB+AAwWypsSdAAXS2Ftb25NaW5NYXhDb3VudGVyQmVuY2hzcQB+AAyushJ2dAAHY291bnRlcnNxAH4ADA9Jks10AAh0b1N0cmluZ3NxAH4ADBbE3EV0AAIhPXNxAH4ADAFadZ10AANnZXRzcQB+AAzjrhAudAAIZ2V0Q2xhc3NzcQB+AAykGWsRdAACbmVzcQB+AAwo68ZidAAJaW5jcmVtZW50c3EAfgAMF5oTJnQAAmVxc3EAfgAM6LBFjnQAAiMjc3EAfgAMBDACSXQACGZpbmFsaXplc3EAfgAMKZpgM3QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AS3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAABnNyABR4c2J0aS5hcGkuQW5ub3RhdGlvbt4OgaL2XAqyAgACWwAJYXJndW1lbnRzdAAfW0x4c2J0aS9hcGkvQW5ub3RhdGlvbkFyZ3VtZW50O0wABGJhc2V0ABBMeHNidGkvYXBpL1R5cGU7eHB1cgAfW0x4c2J0aS5hcGkuQW5ub3RhdGlvbkFyZ3VtZW50O1Gdpo84JQ94AgAAeHAAAAABc3IAHHhzYnRpLmFwaS5Bbm5vdGF0aW9uQXJndW1lbnTWRbHYAxsXfAIAAkwABG5hbWVxAH4ADUwABXZhbHVlcQB+AA14cHQABXZhbHVldAAFR3JvdXBzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwdAAFU3RhdGVzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGRzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAVzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAA29yZ3NxAH4AcHQAB29wZW5qZGtzcQB+AHB0AANqbWhzcQB+AHB0AAthbm5vdGF0aW9uc3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgBxc3EAfgBYdXEAfgBcAAAAAXNxAH4AXnEAfgBgdAANW0F2ZXJhZ2VUaW1lXXNxAH4AYnQADUJlbmNobWFya01vZGVxAH4AanNxAH4AWHVxAH4AXAAAAAFzcQB+AF5xAH4AYHQAC05BTk9TRUNPTkRTc3EAfgBidAAOT3V0cHV0VGltZVVuaXRxAH4AanNxAH4AWHVxAH4AXAAAAAFzcQB+AF5xAH4AYHQAATJzcQB+AGJ0AARGb3JrcQB+AGpzcQB+AFh1cQB+AFwAAAABc3EAfgBedAAKaXRlcmF0aW9uc3QAAjEwc3EAfgBidAAGV2FybXVwcQB+AGpzcQB+AFh1cQB+AFwAAAABc3EAfgBedAAKaXRlcmF0aW9uc3QAAjEwc3EAfgBidAALTWVhc3VyZW1lbnRxAH4AanNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAL2thbW9uLmJlbmNoLmluc3RydW1lbnRzLkthbW9uTWluTWF4Q291bnRlckJlbmNodXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAACdAAlb3JnLm9wZW5qZGsuam1oLmFubm90YXRpb25zLkJlbmNobWFya3QAIW9yZy5vcGVuamRrLmptaC5hbm5vdGF0aW9ucy5Hcm91cHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHEAfgBkc3EAfgCpc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEtMAAlpbmhlcml0ZWRxAH4AS0wAB3BhcmVudHNxAH4AS3hxAH4AZXNxAH4AqXVxAH4ARgAAAABzcQB+AKl1cQB+AEYAAAAAc3EAfgCpdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcQB+AGJ0AAZPYmplY3RzcQB+AGhzcQB+AGt1cQB+AG4AAAADc3EAfgBwdAAEamF2YXNxAH4AcHQABGxhbmdxAH4Ae3NxAH4AYnQAA0FueXNxAH4AaHNxAH4Aa3VxAH4AbgAAAAJzcQB+AHB0AAVzY2FsYXEAfgB7dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAXa2Ftb24uYmVuY2guaW5zdHJ1bWVudHNzcQB+AMp0AAtrYW1vbi5iZW5jaHNxAH4AynQABWthbW9uc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFY4FnqsnVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AD4vaG9tZS9kaWVnby9naXRIdWIvS2Ftb24va2Ftb24tYmVuY2gvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFNazvD30IjOTKdsh3cN6VVfH7F7P
external apis:
7 items
kamon.metric.instrument.CollectionContext -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwqiLBPAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwvfP99nQABm5vdGlmeXNxAH4ADGEUfCJ0AAVHYXVnZXNxAH4ADEPxWtZ0AAR3YWl0c3EAfgAM6PeRVXQADSRhc0luc3RhbmNlT2ZzcQB+AAzh8A5ldAAJSGlzdG9ncmFtc3EAfgAM2QaGVXQADHByb2R1Y3RBcml0eXNxAH4ADGZLfut0AAZlcXVhbHNzcQB+AAzbnCp5dAAFc2NhbGVzcQB+AAzJP2ZYdAAMYXNJbnN0YW5jZU9mc3EAfgAMnmwXcnQADHN5bmNocm9uaXplZHNxAH4ADI4MQV90ABFDb2xsZWN0aW9uQ29udGV4dHNxAH4ADP2sfPt0AA0kaXNJbnN0YW5jZU9mc3EAfgAMGPom53QABmJ1ZmZlcnNxAH4ADPeYAOF0AAhjYW5FcXVhbHNxAH4ADDQbC7N0AA1wcm9kdWN0UHJlZml4c3EAfgAM3WlD1XQADFNuYXBzaG90VHlwZXNxAH4ADG+E4J10AAlub3RpZnlBbGxzcQB+AAyC1+PJdAAMaXNJbnN0YW5jZU9mc3EAfgAMJ6MgV3QADU1pbk1heENvdW50ZXJzcQB+AAxpWSomdAAFbWVyZ2VzcQB+AAxGJLRudAASSW5zdHJ1bWVudFNuYXBzaG90c3EAfgAMi1GHEnQABWFwcGx5c3EAfgAMR73wR3QAB2NsZWFudXBzcQB+AAxs3OLsdAACPT1zcQB+AAy016k9dAAFY2xvbmVzcQB+AAwFLo/JdAAPSW5zdHJ1bWVudFR5cGVzc3EAfgAMTSkgU3QABiRpbml0JHNxAH4ADOp4mu10AAh0b1N0cmluZ3NxAH4ADJEUgJt0AAIhPXNxAH4ADNJy5ot0AAdjb2xsZWN0c3EAfgAMA86F4nQACGdldENsYXNzc3EAfgAMjgNhtnQAB0NvdW50ZXJzcQB+AAzcDcrFdAAOSW5zdHJ1bWVudFR5cGVzcQB+AAwbL9bqdAACbmVzcQB+AAwv2+HBdAAKSW5zdHJ1bWVudHNxAH4ADGuWjkt0AAJlcXNxAH4ADKQyps50AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAwpY8pRdAACIyNzcQB+AAwI0qhFdAAIZmluYWxpemVzcQB+AAx+7tN+dAAOcHJvZHVjdEVsZW1lbnRzcQB+AAyWIsOMdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAGc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBpeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEXhzYnRpLmFwaS5Qcml2YXRlU6lggSbp1T4CAAB4cgATeHNidGkuYXBpLlF1YWxpZmllZKq0Xe9UsW0YAgABTAAJcXVhbGlmaWVydAAVTHhzYnRpL2FwaS9RdWFsaWZpZXI7eHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwc3IAFXhzYnRpLmFwaS5JZFF1YWxpZmllcreHEPQ9sm21AgABTAAFdmFsdWVxAH4ADXhyABN4c2J0aS5hcGkuUXVhbGlmaWVys3iUqevWWycCAAB4cHQABWthbW9udXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAF0ACJrYW1vbi5tZXRyaWMuaW5zdHJ1bWVudC5JbnN0cnVtZW50dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AIdzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gA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
kamon.metric.instrument.CollectionContext$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwqiLBPAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwvfP99nQABm5vdGlmeXNxAH4ADGEUfCJ0AAVHYXVnZXNxAH4ADEPxWtZ0AAR3YWl0c3EAfgAM6PeRVXQADSRhc0luc3RhbmNlT2ZzcQB+AAzh8A5ldAAJSGlzdG9ncmFtc3EAfgAM2QaGVXQADHByb2R1Y3RBcml0eXNxAH4ADGZLfut0AAZlcXVhbHNzcQB+AAzbnCp5dAAFc2NhbGVzcQB+AAzJP2ZYdAAMYXNJbnN0YW5jZU9mc3EAfgAMnmwXcnQADHN5bmNocm9uaXplZHNxAH4ADI4MQV90ABFDb2xsZWN0aW9uQ29udGV4dHNxAH4ADP2sfPt0AA0kaXNJbnN0YW5jZU9mc3EAfgAMGPom53QABmJ1ZmZlcnNxAH4ADPeYAOF0AAhjYW5FcXVhbHNxAH4ADDQbC7N0AA1wcm9kdWN0UHJlZml4c3EAfgAM3WlD1XQADFNuYXBzaG90VHlwZXNxAH4ADG+E4J10AAlub3RpZnlBbGxzcQB+AAyC1+PJdAAMaXNJbnN0YW5jZU9mc3EAfgAMJ6MgV3QADU1pbk1heENvdW50ZXJzcQB+AAxpWSomdAAFbWVyZ2VzcQB+AAxGJLRudAASSW5zdHJ1bWVudFNuYXBzaG90c3EAfgAMi1GHEnQABWFwcGx5c3EAfgAMR73wR3QAB2NsZWFudXBzcQB+AAxs3OLsdAACPT1zcQB+AAy016k9dAAFY2xvbmVzcQB+AAwFLo/JdAAPSW5zdHJ1bWVudFR5cGVzc3EAfgAMTSkgU3QABiRpbml0JHNxAH4ADOp4mu10AAh0b1N0cmluZ3NxAH4ADJEUgJt0AAIhPXNxAH4ADNJy5ot0AAdjb2xsZWN0c3EAfgAMA86F4nQACGdldENsYXNzc3EAfgAMjgNhtnQAB0NvdW50ZXJzcQB+AAzcDcrFdAAOSW5zdHJ1bWVudFR5cGVzcQB+AAwbL9bqdAACbmVzcQB+AAwv2+HBdAAKSW5zdHJ1bWVudHNxAH4ADGuWjkt0AAJlcXNxAH4ADKQyps50AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAwpY8pRdAACIyNzcQB+AAwI0qhFdAAIZmluYWxpemVzcQB+AAx+7tN+dAAOcHJvZHVjdEVsZW1lbnRzcQB+AAyWIsOMdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAGc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBpeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEXhzYnRpLmFwaS5Qcml2YXRlU6lggSbp1T4CAAB4cgATeHNidGkuYXBpLlF1YWxpZmllZKq0Xe9UsW0YAgABTAAJcXVhbGlmaWVydAAVTHhzYnRpL2FwaS9RdWFsaWZpZXI7eHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwc3IAFXhzYnRpLmFwaS5JZFF1YWxpZmllcreHEPQ9sm21AgABTAAFdmFsdWVxAH4ADXhyABN4c2J0aS5hcGkuUXVhbGlmaWVys3iUqevWWycCAAB4cHQABWthbW9udXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAF0ACJrYW1vbi5tZXRyaWMuaW5zdHJ1bWVudC5JbnN0cnVtZW50dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AIdzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gA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
kamon.metric.instrument.Counter$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwvhE0AwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwZ+r483QAD0NvdW50ZXJTbmFwc2hvdHNxAH4ADJRGNLd0AAZub3RpZnlzcQB+AAy+RfHAdAAFY291bnRzcQB+AAzymuMldAAEd2FpdHNxAH4ADLn3amh0AA0kYXNJbnN0YW5jZU9mc3EAfgAM05h5lHQADHByb2R1Y3RBcml0eXNxAH4ADIAYq350AAZlcXVhbHNzcQB+AAy3qLBsdAAFc2NhbGVzcQB+AAw6sHpGdAAMYXNJbnN0YW5jZU9mc3EAfgAMrGkVinQADHN5bmNocm9uaXplZHNxAH4ADLKn0NF0AA0kaXNJbnN0YW5jZU9mc3EAfgAMbBp2FnQABmNyZWF0ZXNxAH4ADMShzNZ0AAhjYW5FcXVhbHNxAH4ADDAjkX10AA1wcm9kdWN0UHJlZml4c3EAfgAMeHuKBXQADFNuYXBzaG90VHlwZXNxAH4ADGM+7qx0ABBMb25nQWRkZXJDb3VudGVyc3EAfgAMOatFEnQACW5vdGlmeUFsbHNxAH4ADOGekNJ0AAxpc0luc3RhbmNlT2ZzcQB+AAzfPHY4dAAIU25hcHNob3RzcQB+AAxD3vb1dAAGPGluaXQ+c3EAfgAM8qN0pnQABW1lcmdlc3EAfgAMMceEuXQABWFwcGx5c3EAfgAMFA06jHQAB2NsZWFudXBzcQB+AAyXqV/WdAACPT1zcQB+AAzlmTFIdAAFY2xvbmVzcQB+AAykVMe3dAAGJGluaXQkc3EAfgAMDb1usHQABGNvcHlzcQB+AAyvJ/bmdAAIdG9TdHJpbmdzcQB+AAyy09SfdAACIT1zcQB+AAwMStqTdAAHY29sbGVjdHNxAH4ADNYZ8KZ0AAhnZXRDbGFzc3NxAH4ADD2g+810AA5jb3B5JGRlZmF1bHQkMXNxAH4ADO5Tso90AAdDb3VudGVyc3EAfgAMTaEGeHQAAm5lc3EAfgAM5QM68XQACWluY3JlbWVudHNxAH4ADErZ99V0AAJlcXNxAH4ADA5Pobl0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAyh/LnddAACIyNzcQB+AAwTUl0YdAAIZmluYWxpemVzcQB+AAx5IUqfdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAySFFf+dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAEc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBpeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHABdAAfa2Ftb24ubWV0cmljLmluc3RydW1lbnQuQ291bnRlcnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AGlMAAlpbmhlcml0ZWRxAH4AaUwAB3BhcmVudHNxAH4AaXhxAH4AhnNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AGQAAAAAc3EAfgCBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAANzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCFdAAKSW5zdHJ1bWVudHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AhXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAABHNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFa2Ftb25zcQB+AJ50AAZtZXRyaWNzcQB+AJ50AAppbnN0cnVtZW50c3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJ9zcQB+AJJ0AAZPYmplY3RzcQB+AJZzcQB+AJl1cQB+AJwAAAADc3EAfgCedAAEamF2YXNxAH4AnnQABGxhbmdxAH4Ap3NxAH4AknQAA0FueXNxAH4AlnNxAH4AmXVxAH4AnAAAAAJzcQB+AJ50AAVzY2FsYXEAfgCnc3EAfgBmcQB+AHN1cQB+AHQAAAAAc3EAfgB2AHQAH2thbW9uLm1ldHJpYy5pbnN0cnVtZW50LkNvdW50ZXJ1cQB+AHkAAAAAfnEAfgB7dAAGTW9kdWxldXEAfgB/AAAAAHNxAH4AgXEAfgCHc3EAfgCBc3EAfgCJc3EAfgCBdXEAfgBkAAAAAHNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AJAAAAACc3EAfgCScQB+AKlzcQB+AJZzcQB+AJl1cQB+AJwAAAADc3EAfgCecQB+AK5zcQB+AJ5xAH4AsHEAfgCnc3EAfgCScQB+ALJzcQB+AJZzcQB+AJl1cQB+AJwAAAACc3EAfgCecQB+ALdxAH4Ap3NxAH4AZnEAfgBzdXEAfgB0AAAAAHNxAH4AdgB0AChrYW1vbi5tZXRyaWMuaW5zdHJ1bWVudC5Mb25nQWRkZXJDb3VudGVydXEAfgB5AAAAAH5xAH4Ae3QACENsYXNzRGVmdXEAfgB/AAAAAHNxAH4AgXEAfgCHc3EAfgCBc3EAfgCJc3EAfgCBdXEAfgBkAAAAAHNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AJAAAAAEc3EAfgCSdAAHQ291bnRlcnNxAH4AlnNxAH4AmXVxAH4AnAAAAARzcQB+AJ50AAVrYW1vbnNxAH4AnnQABm1ldHJpY3NxAH4AnnQACmluc3RydW1lbnRxAH4Ap3NxAH4AknQACkluc3RydW1lbnRxAH4A53NxAH4AknEAfgCpc3EAfgCWc3EAfgCZdXEAfgCcAAAAA3NxAH4AnnEAfgCuc3EAfgCecQB+ALBxAH4Ap3NxAH4AknEAfgCyc3EAfgCWc3EAfgCZdXEAfgCcAAAAAnNxAH4AnnEAfgC3cQB+AKdzcQB+AGZxAH4Ac3VxAH4AdAAAAABzcQB+AHYAdAAna2Ftb24ubWV0cmljLmluc3RydW1lbnQuQ291bnRlclNuYXBzaG90dXEAfgB5AAAAAHEAfgDZdXEAfgB/AAAAAHNxAH4AgXEAfgCHc3EAfgCBc3EAfgCJc3EAfgCBdXEAfgBkAAAAAHNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AJAAAAAIc3EAfgCSdAAMU2VyaWFsaXphYmxlc3EAfgCWc3EAfgCZdXEAfgCcAAAAAnNxAH4AnnEAfgC3cQB+AKdzcQB+AJJxAH4BDXNxAH4AlnNxAH4AmXVxAH4AnAAAAANzcQB+AJ5xAH4ArnNxAH4AnnQAAmlvcQB+AKdzcQB+AJJ0AAdQcm9kdWN0cQB+AQ5zcQB+AJJ0AAZFcXVhbHNxAH4BDnNxAH4AknQACFNuYXBzaG90c3EAfgCSdAAHQ291bnRlcnNxAH4AlnNxAH4AmXVxAH4AnAAAAARzcQB+AJ50AAVrYW1vbnNxAH4AnnQABm1ldHJpY3NxAH4AnnQACmluc3RydW1lbnRxAH4Ap3NxAH4AknQAEkluc3RydW1lbnRTbmFwc2hvdHEAfgEhc3EAfgCScQB+AKlzcQB+AJZzcQB+AJl1cQB+AJwAAAADc3EAfgCecQB+AK5zcQB+AJ5xAH4AsHEAfgCnc3EAfgCScQB+ALJxAH4BDnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQADGthbW9uLm1ldHJpY3NxAH4BNXQAF2thbW9uLm1ldHJpYy5pbnN0cnVtZW50c3EAfgE1dAAFa2Ftb25zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVjgUHwudXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAPS9ob21lL2RpZWdvL2dpdEh1Yi9LYW1vbi9rYW1vbi1jb3JlL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSaZqLFHumqBpnmmLD1WFqHVPcKMA==
kamon.metric.instrument.Histogram -> 

kamon.metric.instrument.Histogram$ -> 

kamon.metric.instrument.LongAdderCounter -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwvhE0AwAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAApc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwZ+r483QAD0NvdW50ZXJTbmFwc2hvdHNxAH4ADJRGNLd0AAZub3RpZnlzcQB+AAy+RfHAdAAFY291bnRzcQB+AAzymuMldAAEd2FpdHNxAH4ADLn3amh0AA0kYXNJbnN0YW5jZU9mc3EAfgAM05h5lHQADHByb2R1Y3RBcml0eXNxAH4ADIAYq350AAZlcXVhbHNzcQB+AAy3qLBsdAAFc2NhbGVzcQB+AAw6sHpGdAAMYXNJbnN0YW5jZU9mc3EAfgAMrGkVinQADHN5bmNocm9uaXplZHNxAH4ADLKn0NF0AA0kaXNJbnN0YW5jZU9mc3EAfgAMbBp2FnQABmNyZWF0ZXNxAH4ADMShzNZ0AAhjYW5FcXVhbHNxAH4ADDAjkX10AA1wcm9kdWN0UHJlZml4c3EAfgAMeHuKBXQADFNuYXBzaG90VHlwZXNxAH4ADGM+7qx0ABBMb25nQWRkZXJDb3VudGVyc3EAfgAMOatFEnQACW5vdGlmeUFsbHNxAH4ADOGekNJ0AAxpc0luc3RhbmNlT2ZzcQB+AAzfPHY4dAAIU25hcHNob3RzcQB+AAxD3vb1dAAGPGluaXQ+c3EAfgAM8qN0pnQABW1lcmdlc3EAfgAMMceEuXQABWFwcGx5c3EAfgAMFA06jHQAB2NsZWFudXBzcQB+AAyXqV/WdAACPT1zcQB+AAzlmTFIdAAFY2xvbmVzcQB+AAykVMe3dAAGJGluaXQkc3EAfgAMDb1usHQABGNvcHlzcQB+AAyvJ/bmdAAIdG9TdHJpbmdzcQB+AAyy09SfdAACIT1zcQB+AAwMStqTdAAHY29sbGVjdHNxAH4ADNYZ8KZ0AAhnZXRDbGFzc3NxAH4ADD2g+810AA5jb3B5JGRlZmF1bHQkMXNxAH4ADO5Tso90AAdDb3VudGVyc3EAfgAMTaEGeHQAAm5lc3EAfgAM5QM68XQACWluY3JlbWVudHNxAH4ADErZ99V0AAJlcXNxAH4ADA5Pobl0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAyh/LnddAACIyNzcQB+AAwTUl0YdAAIZmluYWxpemVzcQB+AAx5IUqfdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAySFFf+dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAEc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBpeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHABdAAfa2Ftb24ubWV0cmljLmluc3RydW1lbnQuQ291bnRlcnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AGlMAAlpbmhlcml0ZWRxAH4AaUwAB3BhcmVudHNxAH4AaXhxAH4AhnNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AGQAAAAAc3EAfgCBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAANzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCFdAAKSW5zdHJ1bWVudHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AhXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAABHNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFa2Ftb25zcQB+AJ50AAZtZXRyaWNzcQB+AJ50AAppbnN0cnVtZW50c3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJ9zcQB+AJJ0AAZPYmplY3RzcQB+AJZzcQB+AJl1cQB+AJwAAAADc3EAfgCedAAEamF2YXNxAH4AnnQABGxhbmdxAH4Ap3NxAH4AknQAA0FueXNxAH4AlnNxAH4AmXVxAH4AnAAAAAJzcQB+AJ50AAVzY2FsYXEAfgCnc3EAfgBmcQB+AHN1cQB+AHQAAAAAc3EAfgB2AHQAH2thbW9uLm1ldHJpYy5pbnN0cnVtZW50LkNvdW50ZXJ1cQB+AHkAAAAAfnEAfgB7dAAGTW9kdWxldXEAfgB/AAAAAHNxAH4AgXEAfgCHc3EAfgCBc3EAfgCJc3EAfgCBdXEAfgBkAAAAAHNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AJAAAAACc3EAfgCScQB+AKlzcQB+AJZzcQB+AJl1cQB+AJwAAAADc3EAfgCecQB+AK5zcQB+AJ5xAH4AsHEAfgCnc3EAfgCScQB+ALJzcQB+AJZzcQB+AJl1cQB+AJwAAAACc3EAfgCecQB+ALdxAH4Ap3NxAH4AZnEAfgBzdXEAfgB0AAAAAHNxAH4AdgB0AChrYW1vbi5tZXRyaWMuaW5zdHJ1bWVudC5Mb25nQWRkZXJDb3VudGVydXEAfgB5AAAAAH5xAH4Ae3QACENsYXNzRGVmdXEAfgB/AAAAAHNxAH4AgXEAfgCHc3EAfgCBc3EAfgCJc3EAfgCBdXEAfgBkAAAAAHNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AJAAAAAEc3EAfgCSdAAHQ291bnRlcnNxAH4AlnNxAH4AmXVxAH4AnAAAAARzcQB+AJ50AAVrYW1vbnNxAH4AnnQABm1ldHJpY3NxAH4AnnQACmluc3RydW1lbnRxAH4Ap3NxAH4AknQACkluc3RydW1lbnRxAH4A53NxAH4AknEAfgCpc3EAfgCWc3EAfgCZdXEAfgCcAAAAA3NxAH4AnnEAfgCuc3EAfgCecQB+ALBxAH4Ap3NxAH4AknEAfgCyc3EAfgCWc3EAfgCZdXEAfgCcAAAAAnNxAH4AnnEAfgC3cQB+AKdzcQB+AGZxAH4Ac3VxAH4AdAAAAABzcQB+AHYAdAAna2Ftb24ubWV0cmljLmluc3RydW1lbnQuQ291bnRlclNuYXBzaG90dXEAfgB5AAAAAHEAfgDZdXEAfgB/AAAAAHNxAH4AgXEAfgCHc3EAfgCBc3EAfgCJc3EAfgCBdXEAfgBkAAAAAHNxAH4AgXVxAH4AZAAAAABzcQB+AIF1cQB+AJAAAAAIc3EAfgCSdAAMU2VyaWFsaXphYmxlc3EAfgCWc3EAfgCZdXEAfgCcAAAAAnNxAH4AnnEAfgC3cQB+AKdzcQB+AJJxAH4BDXNxAH4AlnNxAH4AmXVxAH4AnAAAAANzcQB+AJ5xAH4ArnNxAH4AnnQAAmlvcQB+AKdzcQB+AJJ0AAdQcm9kdWN0cQB+AQ5zcQB+AJJ0AAZFcXVhbHNxAH4BDnNxAH4AknQACFNuYXBzaG90c3EAfgCSdAAHQ291bnRlcnNxAH4AlnNxAH4AmXVxAH4AnAAAAARzcQB+AJ50AAVrYW1vbnNxAH4AnnQABm1ldHJpY3NxAH4AnnQACmluc3RydW1lbnRxAH4Ap3NxAH4AknQAEkluc3RydW1lbnRTbmFwc2hvdHEAfgEhc3EAfgCScQB+AKlzcQB+AJZzcQB+AJl1cQB+AJwAAAADc3EAfgCecQB+AK5zcQB+AJ5xAH4AsHEAfgCnc3EAfgCScQB+ALJxAH4BDnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQADGthbW9uLm1ldHJpY3NxAH4BNXQAF2thbW9uLm1ldHJpYy5pbnN0cnVtZW50c3EAfgE1dAAFa2Ftb25zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVjgUHwudXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAPS9ob21lL2RpZWdvL2dpdEh1Yi9LYW1vbi9rYW1vbi1jb3JlL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSaZqLFHumqBpnmmLD1WFqHVPcKMA==
kamon.metric.instrument.PaddedMinMaxCounter -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwVpB4ngAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAfc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwuJFgFnQABm5vdGlmeXNxAH4ADDdMkIx0ABNQYWRkZWRNaW5NYXhDb3VudGVyc3EAfgAMB+3wJ3QABHdhaXRzcQB+AAwXS6UvdAANJGFzSW5zdGFuY2VPZnNxAH4ADGq8iJF0AAZlcXVhbHNzcQB+AAwiwupmdAAMYXNJbnN0YW5jZU9mc3EAfgAMyFVVmnQADHN5bmNocm9uaXplZHNxAH4ADFqUMQh0AA0kaXNJbnN0YW5jZU9mc3EAfgAM4Iln+nQABmNyZWF0ZXNxAH4ADHpCPMp0ABVyZWZyZXNoVmFsdWVzU2NoZWR1bGVzcQB+AAzVsVkFdAANcmVmcmVzaFZhbHVlc3NxAH4ADMH2iwV0AAxTbmFwc2hvdFR5cGVzcQB+AAxzkCOYdAAJbm90aWZ5QWxsc3EAfgAMlVvKg3QADGlzSW5zdGFuY2VPZnNxAH4ADMYoVv50AA1NaW5NYXhDb3VudGVyc3EAfgAMJdsEuHQACWRlY3JlbWVudHNxAH4ADEl/0Bx0AAY8aW5pdD5zcQB+AAxREkxkdAAFYXBwbHlzcQB+AAzuS3atdAAHY2xlYW51cHNxAH4ADEN7fs10AAI9PXNxAH4ADLw2a9V0AAVjbG9uZXNxAH4ADEtjpNl0AAh0b1N0cmluZ3NxAH4ADKO6cUV0AAIhPXNxAH4ADM2zQ3l0AAdjb2xsZWN0c3EAfgAMTTJ3HHQACGdldENsYXNzc3EAfgAMQ7ZCVHQAAm5lc3EAfgAMrRBkjXQACWluY3JlbWVudHNxAH4ADKXnkNx0AAJlcXNxAH4ADBbvPAV0AAIjI3NxAH4ADPemAWJ0AAhmaW5hbGl6ZXNxAH4ADJfO4ex0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAANzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AFV4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cAF0ACVrYW1vbi5tZXRyaWMuaW5zdHJ1bWVudC5NaW5NYXhDb3VudGVydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AG1zcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AVUwACWluaGVyaXRlZHEAfgBVTAAHcGFyZW50c3EAfgBVeHEAfgByc3EAfgBtdXEAfgBQAAAAAHNxAH4AbXVxAH4AUAAAAABzcQB+AG11cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAA3NyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AHF0AApJbnN0cnVtZW50c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBxc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAAEc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVrYW1vbnNxAH4AinQABm1ldHJpY3NxAH4AinQACmluc3RydW1lbnRzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Ai3NxAH4AfnQABk9iamVjdHNxAH4AgnNxAH4AhXVxAH4AiAAAAANzcQB+AIp0AARqYXZhc3EAfgCKdAAEbGFuZ3EAfgCTc3EAfgB+dAADQW55c3EAfgCCc3EAfgCFdXEAfgCIAAAAAnNxAH4AinQABXNjYWxhcQB+AJNzcQB+AFJxAH4AX3VxAH4AYAAAAABzcQB+AGIAdAAla2Ftb24ubWV0cmljLmluc3RydW1lbnQuTWluTWF4Q291bnRlcnVxAH4AZQAAAAB+cQB+AGd0AAZNb2R1bGV1cQB+AGsAAAAAc3EAfgBtcQB+AHNzcQB+AG1zcQB+AHVzcQB+AG11cQB+AFAAAAAAc3EAfgBtdXEAfgBQAAAAAHNxAH4AbXVxAH4AfAAAAAJzcQB+AH5xAH4AlXNxAH4AgnNxAH4AhXVxAH4AiAAAAANzcQB+AIpxAH4AmnNxAH4AinEAfgCccQB+AJNzcQB+AH5xAH4AnnNxAH4AgnNxAH4AhXVxAH4AiAAAAAJzcQB+AIpxAH4Ao3EAfgCTc3EAfgBScQB+AF91cQB+AGAAAAAAc3EAfgBiAHQAK2thbW9uLm1ldHJpYy5pbnN0cnVtZW50LlBhZGRlZE1pbk1heENvdW50ZXJ1cQB+AGUAAAAAfnEAfgBndAAIQ2xhc3NEZWZ1cQB+AGsAAAAAc3EAfgBtcQB+AHNzcQB+AG1zcQB+AHVzcQB+AG11cQB+AFAAAAAAc3EAfgBtdXEAfgBQAAAAAHNxAH4AbXVxAH4AfAAAAARzcQB+AH50AA1NaW5NYXhDb3VudGVyc3EAfgCCc3EAfgCFdXEAfgCIAAAABHNxAH4AinQABWthbW9uc3EAfgCKdAAGbWV0cmljc3EAfgCKdAAKaW5zdHJ1bWVudHEAfgCTc3EAfgB+dAAKSW5zdHJ1bWVudHEAfgDTc3EAfgB+cQB+AJVzcQB+AIJzcQB+AIV1cQB+AIgAAAADc3EAfgCKcQB+AJpzcQB+AIpxAH4AnHEAfgCTc3EAfgB+cQB+AJ5zcQB+AIJzcQB+AIV1cQB+AIgAAAACc3EAfgCKcQB+AKNxAH4Ak3VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAADc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQADGthbW9uLm1ldHJpY3NxAH4A63QAF2thbW9uLm1ldHJpYy5pbnN0cnVtZW50c3EAfgDrdAAFa2Ftb25zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVjgUHwudXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAPS9ob21lL2RpZWdvL2dpdEh1Yi9LYW1vbi9rYW1vbi1jb3JlL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABRgs0tOMImvgBfbokJV68/p4AfdmA==
source infos:
2 items
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonCounterBench.scala -> 
AAAAAAAAAAA=
/home/diego/gitHub/Kamon/kamon-bench/src/main/scala/kamon/bench/instruments/KamonMinMaxCounterBench.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWOBZ6rJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAPi9ob21lL2RpZWdvL2dpdEh1Yi9LYW1vbi9rYW1vbi1iZW5jaC90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==
